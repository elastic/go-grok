# Declare a Backstage Component that represents your application.
---
# yaml-language-server: $schema=https://json.schemastore.org/catalog-info.json
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: go-grok
  description: Libraries used by Elastic Otel processors

spec:
  type: library
  owner: group:elastic-agent-control-plane
  system: platform-ingest
  lifecycle: production
  
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: buildkite-pipeline-go-grok
  description: Buildkite Pipeline for go-grok
  links:
    - title: Pipeline
      url: https://buildkite.com/elastic/go-grok

spec:
  type: buildkite-pipeline
  owner: group:elastic-agent-control-plane
  system: buildkite
  implementation:
    apiVersion: buildkite.elastic.dev/v1
    kind: Pipeline
    metadata:
      name: go-grok
      description: Buildkite pipeline for the go-grok library
    spec:
      branch_configuration: "main"
      repository: elastic/go-grok
      pipeline_file: ".buildkite/pipeline.yml"
      maximum_timeout_in_minutes: 60
      provider_settings:
        build_pull_request_forks: false
        build_pull_requests: true # requires filter_enabled and filter_condition settings as below when used with buildkite-pr-bot
        build_tags: true
        filter_enabled: true
        filter_condition: >-
          build.pull_request.id == null || (build.creator.name == 'elasticmachine' && build.pull_request.id != null)
      cancel_intermediate_builds: true
      cancel_intermediate_builds_branch_filter: '!main'
      skip_intermediate_builds: true
      skip_intermediate_builds_branch_filter: '!main'
      teams:
        elastic-agent-control-plane:
          access_level: MANAGE_BUILD_AND_READ
        everyone:
          access_level: READ_ONLY
